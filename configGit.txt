Configurar nombre de usuario y correo electronico:

//Nombre de usuario
git config --global user.name "nombre-usuario"

//Correo electrónico
git config --global user.email "correo@gmail.com"
//--global significa para todos los repositorios



//Inicializar repositorio
git init



//Cambiar el nombre de la rama inicial por defecto (Branch)
git config --global init.defaultBranch renombrarRama
//nuevaRama ahora es la rama inicial por defecto



//Estado en el que se encuentra nuestro archivo (U,A,M)
git status



//Agregar el archivo a la fase de preparación (U)
git add nombreArchivo.extensión
o
git add . //Indicas con el punto que todos los archivos se van agregar a la preparación



//Quitarlo del área de preparación
git rm --cached nombreArchivo.extensión



//Crear un commit
git commit -m "Parte 1 de la configuración de Git"
//-m "Comentario" Es el comentario que le asignamos al commit de lo que se hizo o cambio



//Historial de commits realizados
git log



//Editor de texto para los commits

//Visual Studio Code
git config --global core.editor "code --wait"

//Sublime Text
git config --global core.editor "'C:/Program Files (x86)/sublime text 3/subl.exe' -w"

//Notepad++
git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"

//Documentación de GitDocs



//Modificar commit
git commit --amend
//Se recomienda solo haceelo en repositorio local



//Deshacer el ultimo commit añadido
git reset --soft HEAD~1 (--soft o --hard)


//Crear un commit en una rama
git checkout nombre-rama-a-commitear

//Modificar el archivo
git add .
git commit -m "Comentario"


//Crear rama (Se escribe en minusculas y conectadas con un -)
git branch rama-dos (hara la copia dependiendo de la rama en la que nos escontremos)



//Ver todas las ramas
git branch



//Como cambiar de rama
git checkout rama-dos



//Como crear una nueva rama y posicionarse en la nueva rama
git checkout -b rama-tres



//Como cambiar el nombre de una rama
git checkout rama-a-cambiar
git branch -m nuevo-nombre
o
git branch -m nombre-rama nuevo-nombre-rama



//Eliminar una rama (locales unicamente)
git branch -d nombre-rama-a-eliminar



//Ver los commits en una linea
git log --oneline



//Ver los commits y la diferencia de lo que se hizo 
git log -p



//Fusionar ramas (Posicionarse quien va a recibir los cambios)
git merge

//END